-- This file was generated using Luraph Obfuscator v13.5.8

return(function(yK,KK,VK,hK,jK,FK,ZK,AK,RK,aK,qK,zK,HK,MK,oK,pK,rK,NK,bK,OK,EK,YA,PK,xK,lK,fK,JK,uK,UK,sK,tK,mK,wK,IK,GK,gK,nK,TK,DK,WK,QK,vK,Y,...)local LA=(0);local d,S=tostring,(RK);local W,B=EK,(type);local k,c,g=xK,pcalllocal R,x=nil,(nil);local L,i=HK,(tonumber);while LA<=0X1 do if LA==0 then R=string.gsub;LA=0X00001;else x=zK;LA=2;end;end;local z=(setmetatable);LA=0X00000;local m,O=nil,nil;while LA<2 do do if LA~=0X0 then O=qK;LA=2;else m={[0]={[0X0]=0X000,0x1,2,0X003,0X04,ZK,6,7,OK,0X9,10,11,12,0XD,0X0e,15},{[0X0]=0X00001,0X0,3,WK,5,4,QK,0x06,hK,0X8,11,10,0x0000D,12,15,UK},{[0]=0X0002,0x3,0X00000,1,6,0X7,0X4,5,10,11,8,9,14,15,12,13},{[0x00]=oK,WK,1,0X00000,0x7,JK,5,0x4,vK,10,0X9,0X8,0x0F,14,13,12},{[0]=TK,0X0005,0X6,QK,0,1,2,0X3,12,0XD,0xE,0X00f,8,hK,10,0XB},{[0x0]=ZK,4,7,0X6,0X1,0,3,2,13,0Xc,15,14,9,8,11,0xa},{[0X000]=0X6,0X7,TK,0X5,2,3,0,1,0Xe,15,0Xc,13,10,11,8,0X9},{[0]=0X007,6,0X5,4,0x3,2,gK,0x0,0XF,14,13,12,0XB,0X000a,9,0x8},{[0X000]=0X00008,0X0009,10,11,12,0xd,14,0XF,0,0X1,2,0X0003,4,5,6,0X7},{[0X00]=hK,0x8,11,10,0X0000D,12,15,14,1,0X000,0X3,0x02,0x005,0x4,7,0x6},{[0X000]=10,11,8,0X0009,14,0X000f,0XC,13,0x0002,3,MK,1,0X6,QK,0x4,0X5},{[0]=0XB,0Xa,9,0x8,0XF,UK,13,DK,0X03,0X00002,0X1,0,7,0X6,0X5,0x04},{[0]=0Xc,0XD,14,0Xf,0X8,0x9,0xa,11,0x04,5,6,7,0x0000,1,0X0002,0X003},{[0]=13,12,0XF,14,9,8,11,10,0x005,0X0004,0X07,6,0X1,MK,0X3,2},{[MK]=14,15,12,13,jK,11,8,hK,0X6,QK,0X004,5,2,oK,0X0,0x01},{[0X0]=15,0Xe,13,0Xc,11,10,hK,0X08,7,6,5,0X4,0X0003,0X2,1,0X0000}};LA=1;end;end;end;LA=7;local Q,e,U,C,J,V,cK=nil,nil,nil,nil,nil,nil,(nil);while LA~=8 do if not(LA<=3)then if not(LA<=0X005)then do if LA~=0X00006 then do Q=coroutine.wrap;end;LA=3;else V=0X100000000;LA=0X0001;end;end;else if LA~=0X4 then do C=VK.byte;end;LA=0;else do LA=5;end;end;end;else if not(LA<=0X1)then if LA==0X02 then U=nK or aK;do LA=4;end;else e=VK.char;do LA=0X002;end;end;else if LA~=0 then cK=function(...)return k('\035',...),{...};end;LA=8;else J=sK;LA=0X06;end;end;end;end;local v=(J and J()or tK);local s=(V-1);do LA=0X0;end;local T=(nil);while LA<0X2 do do if LA~=0 then LA=2;else T=0X001;do LA=1;end;end;end;end;local y,H=nil,(nil);for Dg=0X00,0x001 do if Dg==0 then do y={[5]=JK,[0X0007]=0X3,[1]=0x0008,[0X00004]=0x0001,[2]=0x00001,[0x3]=3,[0]=0X5,[3]=0X0};end;else do H=IK;end;end;end;local M=(nil);do g=R(S(g,5),'.\046',function(UO)if C(UO,0X2)~=72 then local h2=(1);local U2=nil;while h2<0X002 do if h2~=0 then U2=e(i(UO,16));h2=0X0000;else if not(M)then do return U2;end;else local Sj=x(U2,M);do M=rK;end;do return Sj;end;end;h2=0X2;end;end;else local mA=0X1;while 0.03620183832761348 do if mA~=0 then M=i(S(UO,1,1));mA=0;else do return"";end;end;end;end;end);end;do LA=0X5;end;local D,q,a,I,t,j,A=nil,nil,nil,nil,nil,nil,(nil);repeat if not(LA<=2)then if not(LA<=0x4)then if LA==0x0005 then do D=function()local YO=C(g,T,T);T=T+1;return YO;end;end;LA=3;else t=q-1;LA=1;end;else do if LA==0X003 then q=0X80000000;LA=0;else A=function()local PB,aB=nil,nil;for vH=0X000,2 do do if not(vH<=0)then if vH==1 then if not(aB>=q)then else aB=aB-V;end;else return aB*V+PB;end;else PB,aB=j(),j();end;end;end;end;LA=0X007;end;end;end;else if not(LA<=0X000)then if LA==0X1 then j=function()local tz,Ez,Oz,sz=C(g,T,T+0X3);do T=T+4;end;return sz*16777216+Oz*65536+Ez*256+tz;end;do LA=0x04;end;else I={[0]=0X1};LA=0x6;end;else a=0X2^52;LA=0x02;end;end;until LA>=7;local X,r,XK,p=AK,nil,nil,nil;for eD=0X00000,3 do if not(eD<=1)then if eD~=2 then do p=function()local Nt,Jt,Tt,St,ct,it,Rt=2,nil,nil,nil,nil,nil,(nil);repeat if not(Nt<=2)then if not(Nt<=4)then if Nt==5 then ct=r(Tt,0x14,0X0b);Nt=0X0;else if not(Jt==0X0 and Tt==0)then else return 0;end;do Nt=0X00004;end;end;else if Nt~=0X3 then St=(-0X0001)^r(Tt,0X0001f,0X1);Nt=0X5;else Tt=j();Nt=0X6;end;end;else do if not(Nt<=0X00)then if Nt==1 then Rt=1;Nt=0X07;else Jt=j();Nt=0X3;end;else do it=r(Tt,0X0,pK)*V+Jt;end;Nt=1;end;end;end;until Nt>=7;do for GM=0x0,1 do if GM~=0 then return St*(0X2^(ct-1023))*(it/a+Rt);elseif ct==0X0 then if it~=0 then local uB=(0);while uB<=1 do if uB==0 then ct=0X1;uB=1;else Rt=0X0000;uB=0X2;end;end;else return St*0;end;elseif ct~=0X7Ff then else if it==0X0000 then do return St*(0/0);end;else return St*(1/0);end;end;end;end;end;end;else XK={};end;else do if eD~=0 then do r=function(iX,CX,QX)local HX=(0);local LX=(nil);repeat if HX~=0 then LX=LX-LX%1;HX=2;else LX=(iX/I[CX])%I[QX];do HX=0x1;end;end;until HX>=0X0002;return LX;end;end;else do local TX=(0X2);for LN=1,0X1f do local ON=1;repeat if ON==0 then TX=TX*2;ON=2;else I[LN]=TX;ON=0;end;until ON==2;end;end;end;end;end;end;local f=((bit or mK));local P=f and f[fK]or function(oH,NH)oH=oH%V;local WH=1;NH=NH%V;local qH=nil;local jH=(1);while'I\039'do do if jH<=0 then while oH>0X0000 and NH>0 do local iP,oP=nil,nil;local gP=(0x0003);repeat if not(gP<=1)then if not(gP<=2)then if gP~=0X0003 then oP=NH%0X10;do gP=2;end;else iP=oH%16;gP=4;end;else do qH=qH+m[iP][oP]*WH;end;gP=0X0;end;elseif gP~=0X0 then NH=(NH-oP)/0X10;do break;end;else oH=(oH-iP)/0X0010;do gP=1;end;end;until false;WH=WH*PK;end;jH=2;else if jH~=1 then return qH+oH*WH+NH*WH;else qH=0;jH=0;end;end;end;end;end;local F=(f and f[FK]or function(rA,PA)do rA=rA%V;end;do PA=PA%V;end;return((rA+PA)-P(rA,PA))/0x2;end);local o=uK;local u=(f and f[GK]or function(Tx,Ex)local nx=(0X0001);repeat if not(nx<=0X000)then if nx~=0x1 then return s-F(s-Tx,s-Ex);else Tx=Tx%V;do nx=0;end;end;else Ex=Ex%V;do nx=0x2;end;end;until false;end);local G,K,w,h,E=f and f.bnot or function(Kz)return s-(Kz%V);end,nil,nil,nil,nil;for le=0X0000,5 do do if not(le<=2)then if not(le<=3)then do if le~=0x4 then E=table.insert;else do w=w or function(zr,cr)do if not(cr>=0X20)then else return 0X00;end;end;if not(cr<0X00000)then else do return K(zr,-cr);end;end;local Nr,br=0x0,(nil);while(true)do if Nr~=0X0 then do return br-br%1;end;else br=(zr%V/I[cr]);Nr=1;end;end;end;end;end;end;else do K=K or function(NH,XH)if XH>=0x20 then return 0X0;end;local wH=1;while(true)do do if wH~=0X0 then do if not(XH<MK)then else return w(NH,-XH);end;end;wH=0x00;else return(NH*I[XH])%V;end;end;end;end;end;end;elseif not(le<=0)then do if le~=1 then do h=coroutine.yield;end;else w=f and f[wK];end;end;else do K=f and f[KK];end;end;end;end;LA=0;local N,l=nil,(nil);repeat do if LA==0X00000 then do N=function()local Jd,Fd=0,(0X000);repeat local tX=(C(g,T,T));T=T+1;do Jd=u(Jd,K(F(tX,127),Fd));end;do if F(tX,128)==0x00000 then do return Jd;end;end;end;Fd=Fd+0X7;until false;end;end;LA=0X1;else l={5,7,0x04};LA=0X2;end;end;until LA>0X001;local YK=(D());local b=(function()local WX,rX=0X0,(nil);repeat do if WX~=0X0 then if not(rX>t)then else return rX-V;end;break;else do rX=N();end;WX=0X001;end;end;until(false);do return rX;end;end);local LK=D();do LA=3;end;local kK,dK,iK,BK=nil,nil,nil,nil;do repeat do if LA<=0X001 then do if LA==0X0 then BK={};do break;end;else dK=1;do LA=2;end;end;end;elseif LA==0X0002 then iK=function(C6)local a6,x6,d6=0X003,nil,(nil);while(true)do if a6<=1 then if a6~=0X0 then T=T+x6;a6=0X2;else for fg=1,x6,7997 do local ng=fg+7997-0X1;if not(ng>x6)then else ng=x6;end;local sg=({C(g,T+fg-0X01,T+ng-0X1)});for Jl=0X1,#sg do local wl=0;repeat do if wl~=0 then YK=(C6*YK+173)%256;do wl=2;end;else sg[Jl]=P(sg[Jl],YK);wl=1;end;end;until wl==2;end;d6=d6..e(U(sg));end;a6=0X001;end;else if a6<=2 then return d6;else if a6~=3 then d6='';do a6=0X0;end;else x6=j();a6=4;end;end;end;end;end;LA=0;else kK=function(gp)local Sp={C(g,T,T+0X3)};local kp,cp=nil,nil;do for C4=0,1 do if C4==0X000 then kp=P(Sp[1],LK);else do cp=P(Sp[0X002],LK);end;end;end;end;local Fp,xp,vp=0,nil,nil;while(true)do if Fp==0X000 then xp=P(Sp[0x3],LK);Fp=0X1;else vp=P(Sp[0X4],LK);do break;end;end;end;LK=(125*LK+gp)%0X100;T=T+0x004;return vp*lK+xp*65536+cp*256+kp;end;LA=1;end;end;until false;end;local Z=yK;local function SK(cZ,kZ,bZ)local vZ=(kZ[0X0001]);local RZ=kZ[0x07];local TZ=(kZ[8]);local OZ,YZ=kZ[2],(kZ[0X6]);local sZ,uZ=kZ[5],(kZ[4]);local fZ=z({},{__mode="v"});local CZ=kZ[0X00003];local PZ=nil;PZ=function(...)local bg,Xg=0X1,{};local kg=((J and J()or _ENV));local ag,Rg=cK(...);ag=ag-0X01;local xg={[0X2]=kZ,[0x00001]=Xg};local Hg=(0X0);for EU=0,ag do if not(TZ>EU)then break;else Xg[EU]=Rg[EU+0X1];end;end;local wg=((kg==v and bZ or kg));if not OZ then Rg=nil;else if YZ then(Xg)[TZ]={n=ag>=TZ and ag-TZ+0X1 or 0,U(Rg,TZ+0X1,ag+1)};end;end;if wg==kg then elseif o then(o)(PZ,wg);else _ENV=wg;end;local Og,zg,fg,mg=c(function()while"\047P?\115 "do local PI=(sZ[bg]);local rI=(PI[2]);bg=bg+1;if not(rI>=0x2F)then if not(rI<23)then do if rI<35 then if rI>=29 then if not(rI<32)then if rI>=0X21 then if rI==34 then(Xg)[PI[0X5]]=nil;else do if not(not(Xg[PI[4]]<PI[3]))then else bg=PI[0X5];end;end;end;else local er=cZ[PI[0X004]];Xg[PI[5]]=er[1][er[0x00002]];end;else do if rI>=0X00001E then if rI~=0X1F then Xg[PI[0x0005]]=Xg[PI[4]]>=Xg[PI[0X7]];else if Xg[PI[4]]==Xg[PI[0X7]]then bg=PI[0x5];end;end;else do(Xg[PI[5]])[PI[0x1]]=PI[3];end;end;end;end;else if rI<26 then do if not(rI<24)then if rI~=25 then do Xg[PI[0X005]]=Xg[PI[0X00004]]>Xg[PI[7]];end;else(Xg)[PI[0X05]]=Xg[PI[0X4]]==Xg[PI[7]];end;else do if Xg[PI[0X005]]then do bg=PI[0X004];end;end;end;end;end;else do if not(rI<27)then do if rI==0x1c then local nn,Qn=PI[4],(PI[0x00007]);local tn=PI[5];if nn~=0X000 then Hg=tn+nn-1;end;local an,cn=nil,nil;if nn~=1 then an,cn=cK(Xg[tn](U(Xg,tn+0X1,Hg)));else an,cn=cK(Xg[tn]());end;if Qn==0x1 then do Hg=tn-0X1;end;else if Qn==0 then an=an+tn-1;Hg=an;else do an=tn+Qn-2;end;Hg=an+0X1;end;local zr=0;for r7=tn,an do do zr=zr+1;end;do(Xg)[r7]=cn[zr];end;end;end;else if not(Xg[PI[0X004]]<=Xg[PI[7]])then else bg=PI[0x5];end;end;end;else Xg[PI[5]]={};end;end;end;end;else do if rI>=41 then if not(rI>=0X002C)then if not(rI>=0X2A)then local jf=(PI[0X5]);(Xg)[jf]=Xg[jf](Xg[jf+1],Xg[jf+2]);Hg=jf;else if rI~=43 then Xg[PI[0X5]]=Xg[PI[4]]*Xg[PI[0X7]];else local Kc=PI[0X5];Xg[Kc]=Xg[Kc](U(Xg,Kc+0x1,Hg));Hg=Kc;end;end;else do if rI>=0x2D then if rI~=46 then bg=PI[4];else repeat local rc,ec=fZ,(Xg);if#rc>0 then local Ep={};for Gv,Jv in W,rc do for ii,Qi in W,Jv do if Qi[1]==ec and Qi[0X002]>=0X0000 then local fq=Qi[2];do if not(not Ep[fq])then else Ep[fq]={ec[fq]};end;end;Qi[1]=Ep[fq];Qi[0X2]=1;end;end;end;end;until true;return;end;else(Xg)[PI[5]]=Xg[PI[4]]^Xg[PI[0x7]];end;end;end;else if not(rI<38)then if rI<39 then(Xg)[PI[5]]=wg[PI[0X1]];else if rI~=40 then do if not(Xg[PI[4]]<=Xg[PI[7]])then do bg=PI[5];end;end;end;else if PI[7]~=0X00023 then(Xg)[PI[0X5]]=-Xg[PI[0X4]];else bg=bg-0X1;do sZ[bg]={[4]=(PI[0X00004]-125),[5]=(PI[0x5]-0X0007d),[2]=78};end;end;end;end;else if rI>=0X24 then do if rI~=37 then if Xg[PI[4]]~=PI[0X3]then bg=PI[0X5];end;else Hg=PI[0x05];(Xg)[Hg]=Xg[Hg]();end;end;else if PI[0X7]==0XF then do bg=bg-0X1;end;do sZ[bg]={[4]=(PI[4]-90),[2]=0x000016,[5]=(PI[0X5]-90)};end;else repeat local OU,qU=fZ,(Xg);if not(#OU>0)then else local wx=({});do for JI,uI in W,OU do for Ze,ve in W,uI do if not(ve[1]==qU and ve[2]>=0)then else local nG=(ve[2]);if not wx[nG]then(wx)[nG]={qU[nG]};end;ve[1]=wx[nG];ve[0X2]=1;end;end;end;end;end;until true;local ni=PI[5];return false,ni,ni;end;end;end;end;end;end;end;else if not(rI<11)then if not(rI>=17)then do if rI>=14 then if rI>=15 then do if rI~=16 then repeat local Yg,Tg=fZ,(Xg);if not(#Yg>0)then else local HS={};do for fA,AA in W,Yg do for jA,JA in W,AA do if not(JA[1]==Tg and JA[2]>=0X000)then else local xF=JA[2];do if not(not HS[xF])then else HS[xF]={Tg[xF]};end;end;do(JA)[1]=HS[xF];end;(JA)[0X00002]=0X0001;end;end;end;end;end;until true;return true,PI[0X5],0X00000;else local CB=(PI[0X5]);local XB,cB=Xg[CB]();if not(XB)then else for bU=0X1,PI[7]do do Xg[CB+bU]=cB[bU];end;end;bg=PI[4];end;end;end;else do if PI[7]==0xA6 then bg=bg-1;sZ[bg]={[0X005]=(PI[0X0005]-0X32),[0x4]=(PI[0x4]-50),[0X00002]=0X28};elseif PI[7]==0X00010 then bg=bg-0X00001;do(sZ)[bg]={[2]=0X4E,[4]=(PI[0X004]-0x01C),[0X05]=(PI[5]-0x01C)};end;else Xg[PI[0X5]]=Rg[TZ+0x0001];end;end;end;else if rI<12 then Xg[PI[0X5]]=w(Xg[PI[0X4]],Xg[PI[7]]);else if rI~=0x0000D then if not(not(Xg[PI[4]]<=PI[0X3]))then else do bg=PI[5];end;end;else do(Xg)[PI[0x00005]]=PI[1];end;end;end;end;end;else if not(rI>=20)then do if rI>=0X012 then if rI~=19 then local Z2=(PI[0X5]);local M2=(Q(function(...)(h)();for M5,T5,i5,L5,e5,R5,P5,Q5,p5,C5 in...do h(true,{M5,T5,i5,L5,e5,R5,P5,Q5,p5,C5});end;end));(M2)(Xg[Z2],Xg[Z2+0X01],Xg[Z2+2]);Hg=Z2;(Xg)[Z2]=M2;do bg=PI[0X00004];end;else(Xg)[PI[5]]=false;end;else do XK[PI[4]]=Xg[PI[0x5]];end;end;end;else if not(rI>=21)then Xg[PI[5]]=Xg[PI[0x4]][Xg[PI[7]]];else if rI==22 then(Xg)[PI[5]]=#Xg[PI[4]];else(Xg)[PI[5]]=Xg[PI[0X4]]~=Xg[PI[0X0007]];end;end;end;end;else if rI>=5 then if rI>=8 then if rI>=0X9 then if rI==0X0000a then local Mn=(PI[0X5]);do Hg=Mn+PI[0x00004]-1;end;(Xg[Mn])(U(Xg,Mn+0X1,Hg));Hg=Mn-1;else local r2=cZ[PI[0X4]];(r2[0x0001])[r2[0X0002]]=Xg[PI[5]];end;else(Xg)[PI[5]]=Xg[PI[0x4]]<=Xg[PI[7]];end;else do if not(rI<6)then if rI~=0X7 then local r2=(PI[0X00004]);Xg[PI[0X5]]=Xg[r2]..Xg[r2+0X01];else local xp=Xg[PI[4]]/Xg[PI[7]];Xg[PI[0x5]]=xp-xp%0X1;end;else Xg[PI[5]]=Xg[PI[4]]%PI[3];end;end;end;else if not(rI>=0X002)then if rI==0X01 then local ou=(PI[5]);local Eu,Fu=Xg[ou],(PI[0x7]-1)*0X32;for Gq=1,Hg-ou do do(Eu)[Fu+Gq]=Xg[ou+Gq];end;end;else local gZ=PI[5];Xg[gZ](Xg[gZ+0X1],Xg[gZ+0X002]);Hg=gZ-0X1;end;else if rI>=0X3 then if rI==4 then do if not(not Xg[PI[0x005]])then else bg=PI[4];end;end;else local L_=(PI[0X05]);local Q_=(Xg[L_]);local P_=Xg[L_+2];local r_=Xg[L_+0X1];(Xg)[L_]=Q(function()for bi=Q_,r_,P_ do(h)(true,bi);end;end);do bg=PI[4];end;end;else for MC=PI[0X5],PI[0X4]do(Xg)[MC]=nil;end;end;end;end;end;end;else if not(rI<71)then if rI>=83 then do if rI<0X059 then if not(rI<0X000056)then do if not(rI>=0X57)then do if not(Xg[PI[4]]<Xg[PI[0X7]])then else bg=PI[5];end;end;else if rI~=88 then local Ae=PI[5];for GI=Ae,Ae+(PI[0x4]-0x1)do(Xg)[GI]=Rg[TZ+(GI-Ae)+1];end;else Xg[PI[5]]=Xg[PI[0X04]]~=PI[0X3];end;end;end;else if not(rI>=0x000054)then local Lc=PI[0X0005];local Fc,Oc,jc=Xg[Lc]();if not(Fc)then else Xg[Lc+1]=Oc;Xg[Lc+0X02]=jc;do bg=PI[0x4];end;end;else if rI==0X55 then do(Xg)[PI[5]]=Xg[PI[0x4]][PI[0X0003]];end;else if PI[0X7]==0X00077 then bg=bg-0X1;do sZ[bg]={[0X02]=0X02e,[0x4]=(PI[0X004]-0Xfb),[0X00005]=(PI[0X5]-251)};end;else repeat local rX,cX=fZ,(Xg);if not(#rX>0)then else local Ry={};for rp,yp in W,rX do for Qr,jr in W,yp do if jr[0X1]==cX and jr[0x02]>=0X0 then local kt=(jr[0X00002]);if not Ry[kt]then Ry[kt]={cX[kt]};end;do jr[1]=Ry[kt];end;(jr)[0x002]=1;end;end;end;end;until true;return false,PI[0X5],Hg;end;end;end;end;else if not(rI>=92)then if rI<0x05A then Xg[PI[5]]=P(Xg[PI[0x0004]],Xg[PI[7]]);else if rI~=91 then local kf=(PI[0x5]);local yf,jf=Xg[kf]();do if yf then bg=PI[0X4];Xg[kf+0X3]=jf;end;end;else do(Xg)[PI[5]]={U({},1,PI[4])};end;end;end;else do if not(rI>=0X00005D)then Xg[PI[5]]=Xg[PI[0X4]]%Xg[PI[0x7]];else if rI==0X5E then local fX=PI[0X4];local sX=Xg[fX];for p9=fX+0x001,PI[7]do do sX=sX..Xg[p9];end;end;do(Xg)[PI[5]]=sX;end;else(Xg)[PI[0X0005]]=Xg[PI[0X4]]+Xg[PI[0X0007]];end;end;end;end;end;end;else if rI>=0X4d then do if rI>=0X00050 then if rI<81 then(Xg)[PI[5]]=Xg[PI[0X4]]/Xg[PI[0X7]];else if rI==82 then local Zn=PI[5];local pn=Q(function(...)(h)();for SV in...do(h)(true,SV);end;end);pn(Xg[Zn],Xg[Zn+0X0001],Xg[Zn+0X0002]);do Hg=Zn;end;Xg[Zn]=pn;bg=PI[4];else local mu,yu=PI[0X05],Xg[PI[4]];(Xg)[mu+0x00001]=yu;do(Xg)[mu]=yu[PI[0x00003]];end;end;end;else do if rI>=78 then if rI==0X4f then Xg[PI[5]]=Xg[PI[0X4]]+PI[0X3];else if PI[0X07]==0XB4 then bg=bg-0X1;(sZ)[bg]={[0X00002]=0X2e,[5]=(PI[0X00005]-0x5f),[0x004]=(PI[4]-0X005F)};elseif PI[7]~=94 then do Xg[PI[5]]=Xg[PI[0X004]];end;else bg=bg-0X0001;sZ[bg]={[0X00005]=(PI[0X00005]-0X0000c4),[0x004]=(PI[0X4]-0XC4),[2]=46};end;end;else if not(Xg[PI[0X0004]]<Xg[PI[0X7]])then do bg=PI[5];end;end;end;end;end;end;else if rI<74 then if rI>=0x48 then do if rI==0x49 then(Xg)[PI[0X5]]=u(Xg[PI[0X4]],Xg[PI[7]]);else if PI[0x7]~=0Xa5 then repeat local zz,sz=fZ,Xg;if not(#zz>0X0)then else local EU={};for A3,s3 in W,zz do do for hC,iC in W,s3 do if iC[0X00001]==sz and iC[2]>=0 then local Yy=(iC[0X02]);if not(not EU[Yy])then else do EU[Yy]={sz[Yy]};end;end;(iC)[0X0001]=EU[Yy];do iC[0x2]=0X01;end;end;end;end;end;end;until true;local xB=PI[0x05];return false,xB,xB+PI[4]-2;else bg=bg-1;sZ[bg]={[4]=(PI[4]-70),[0X5]=(PI[5]-70),[2]=0X2e};end;end;end;else do(Xg[PI[0X5]])[Xg[PI[0X4]]]=Xg[PI[0X7]];end;end;else if rI>=75 then if rI==76 then xg[PI[4]]=Xg[PI[5]];else Xg[PI[0X05]][PI[1]]=Xg[PI[0X00007]];end;else Xg[PI[0X5]]=Xg[PI[4]]<Xg[PI[7]];end;end;end;end;else do if not(rI<0x3b)then if not(rI<0x41)then if rI<68 then if not(rI>=0x42)then Xg[PI[0X0005]]=true;else if rI==67 then local ev=PI[5];Xg[ev](Xg[ev+0X1]);Hg=ev-0X01;else do if Xg[PI[4]]~=PI[3]then else bg=PI[5];end;end;end;end;else if not(rI>=0x00045)then Xg[PI[5]]=G(Xg[PI[4]]);elseif rI~=0X46 then local jD,eD=uZ[PI[4]],(nil);local JD=jD[0x9];local YD=#JD;do if YD>0X0000 then eD={};do for II=1,YD do local mI=(JD[II]);if mI[0X1]==0x0 then(eD)[II-0x1]={Xg,mI[2]};else eD[II-1]=cZ[mI[2]];end;end;end;E(fZ,eD);end;end;Xg[PI[0X00005]]=SK(eD,jD,wg);else Xg[PI[0X5]]=XK[PI[4]];end;end;else if not(rI>=0X00003e)then do if rI>=0X3c then do if rI==0x3d then if PI[7]~=0x1A then do repeat local pf,of,hf=fZ,Xg,PI[0x5];if not(#pf>0x0)then else local rs=({});for dz,Gz in W,pf do for Hc,Rc in W,Gz do if Rc[0x1]==of and Rc[0X2]>=hf then local qT=Rc[0X0002];if not rs[qT]then rs[qT]={of[qT]};end;Rc[0x001]=rs[qT];Rc[2]=1;end;end;end;end;until 0.904934609504612;end;else bg=bg-0X1;(sZ)[bg]={[2]=0x54,[5]=(PI[0x00005]-0X000Ac),[0X004]=(PI[4]-0XAC)};end;else(wg)[PI[0x1]]=Xg[PI[0X5]];end;end;else Xg[PI[0X5]]=F(Xg[PI[4]],Xg[PI[0X7]]);end;end;else if not(rI>=63)then local a9=(PI[0X5]);local f9,u9=Xg[a9]();if not(f9)then else(Xg)[a9+1]=u9;bg=PI[4];end;else if rI==64 then do(Xg)[PI[5]]=PI[1];end;else local sR=(PI[0x0005]);Xg[sR](U(Xg,sR+1,Hg));Hg=sR-0X00001;end;end;end;end;else if rI<0x35 then if not(rI>=0X032)then if not(rI<48)then do if rI~=49 then Xg[PI[0X005]][Xg[PI[4]]]=PI[3];else local Df=PI[0X5];do Hg=Df+PI[4]-0X01;end;Xg[Df]=Xg[Df](U(Xg,Df+1,Hg));Hg=Df;end;end;else local em=((PI[7]-0X01)*50);local sm=(PI[0X5]);local Ym=Xg[sm];for vE=1,PI[4]do Ym[em+vE]=Xg[sm+vE];end;end;else if not(rI>=0x000033)then Hg=PI[5];Xg[Hg]();Hg=Hg-1;else if rI~=52 then local Mm,Hm=PI[0X5],PI[4];do Hg=Mm+Hm-0X1;end;repeat local Hn,on=fZ,Xg;if#Hn>0 then local Kr={};for qn,Tn in W,Hn do for TN,zN in W,Tn do if not(zN[1]==on and zN[0X2]>=0X0)then else local LG=zN[0x2];do if not(not Kr[LG])then else do(Kr)[LG]={on[LG]};end;end;end;(zN)[0X1]=Kr[LG];(zN)[0X2]=0X1;end;end;end;end;until true;return true,Mm,Hm;else local tk=PI[0x5];local ok=(Q(function(...)(h)();for Av,pv in...do h(true,Av,pv);end;end));ok(Xg[tk],Xg[tk+0X0001],Xg[tk+2]);Hg=tk;Xg[tk]=ok;bg=PI[4];end;end;end;elseif rI>=0X00038 then if rI>=0X39 then if rI==58 then Xg[PI[5]]=Xg[PI[4]]-Xg[PI[0X7]];else if Xg[PI[0X4]]==Xg[PI[7]]then else do bg=PI[5];end;end;end;else(Xg)[PI[0X5]]=xg[PI[0X04]];end;else if rI<0X0036 then local NZ=PI[5];(Xg)[NZ]=Xg[NZ](Xg[NZ+0x1]);Hg=NZ;else do if rI~=0x37 then repeat local V6,q6=fZ,(Xg);if#V6>0 then local P9=({});do for Fa,wa in W,V6 do for Ht,et in W,wa do do if et[0x1]==q6 and et[2]>=0X0 then local A3=(et[0x02]);if not(not P9[A3])then else do P9[A3]={q6[A3]};end;end;do(et)[1]=P9[A3];end;et[0X2]=1;end;end;end;end;end;end;until true;do return true,PI[5],1;end;else local sz=ag-TZ;local Hz=(PI[5]);if not(sz<0)then else sz=-0x0001;end;do for A1=Hz,Hz+sz do(Xg)[A1]=Rg[TZ+(A1-Hz)+1];end;end;Hg=Hz+sz;end;end;end;end;end;end;end;end;end;end);if not(Og)then do if B(zg)=="string"then if H(zg,'at\116e\109p\116\032t\111\032\121\105e\108d a\099\114\111\115s \109e\116\097\109\101tho\100/C%\045\099\097\108l b\111\117n\100\097r\121')then return coroutine.yield();end;if H(zg,'^\046-\058\037d\043\058 ')then X("\076\117ra\112h \083c\114i\112t\058"..(RZ[bg-1]or'(i\110\116\101\114\110a\108\041').."\058\032"..d(zg),0X0);else X(zg,0X0);end;else(X)(zg,0);end;end;else if zg then if mg==1 then return Xg[fg]();else do return Xg[fg](U(Xg,fg+1,Hg));end;end;else if fg then return U(Xg,fg,mg);end;end;end;end;do if not(o)then else(o)(PZ,bZ);end;end;return PZ;end;local function CK()local Lb,Db={},({rK,nil,nil,{},{},nil,{},nil,nil});local ub=D();Db[2]=r(ub,0x1,gK)~=0X000;local mb,gb,Ab,ab,Bb,Mb,Gb,Ob,bb,Hb,Tb,Nb=0X000F,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,(nil);do while'J\043\036,\074\053'do if not(mb<=12)then if not(mb<=18)then if not(mb<=21)then if not(mb<=23)then do if mb~=24 then do(Db)[oK]=N();end;mb=0X00B;else(Db)[0X6]=r(ub,0X2,1)~=0X00;mb=10;end;end;elseif mb~=22 then Ob=Db[4];mb=8;else(Db)[14]=j();mb=0X12;end;else do if not(mb<=0X000013)then if mb~=0X14 then for Zi=0x001,Tb do(bb)[Zi]={[0X0001]=D(),[TK]=b(),[0X3]=D(),[6]=D(),[7]=b(),[2]=N(),[5]=b()};end;do mb=14;end;else(Db)[gK]=N();mb=0X000016;end;else Mb=D()~=0X0;mb=17;end;end;end;else if mb<=15 then if mb<=0XD then Bb=D();mb=19;else if mb==14 then for WJ=0x00001,Tb do local GJ,vJ=0X1,(nil);repeat if GJ==0x0000 then for hX,EX in YA(l)do local IX,KX,ZX=1,nil,nil;while IX~=3 do if IX<=0x00000 then if ZX==1 then local QS,mS,JS=Lb[vJ[EX]],0,nil;while mS<2 do if mS==0x0 then JS=Ab[QS];mS=0X1;else if not(JS)then else local JO,yO=2,nil;while JO~=3 do if JO<=0X0 then(yO)[#yO+1]={vJ,KX};JO=0X00003;else if JO~=0x1 then(vJ)[KX]=JS[1];JO=1;else yO=JS[2];do JO=0;end;end;end;end;end;mS=0x2;end;end;elseif ZX==0X00c then do(vJ)[EX]=WJ+vJ[EX]+1;end;end;do IX=0X3;end;else if IX~=1 then ZX=vJ[KX];IX=0;else KX=y[EX];IX=0x0002;end;end;end;end;GJ=2;else vJ=Db[5][WJ];do GJ=0X0;end;end;until GJ>=0x2;end;mb=9;else gb=0X0001;mb=24;end;end;else do if not(mb<=0X10)then if mb==0X00011 then for Wf=1,ab do local jf,Zf=nil,nil;local pf=0X00002;while pf~=0X004 do if pf<=0X00001 then if pf~=0X0 then Zf=D();do pf=0X3;end;else if Zf==0X062 then do jf=S(iK(Bb),D());end;elseif Zf==83 then do jf=A();end;elseif Zf==175 then do jf=true;end;elseif Zf==185 then jf=p();elseif Zf==196 then jf=S(iK(Bb),ZK);elseif Zf==99 then jf=A();elseif Zf==89 then do jf=S(iK(Bb),0X3);end;elseif Zf==184 then do jf=p()+j();end;elseif Zf==125 then jf=p()+j();elseif Zf~=0X00042 then else jf=NK;end;do pf=4;end;end;elseif pf==0X0002 then do jf=rK;end;do pf=0x1;end;else do Lb[Wf-1]=gb;end;do pf=0;end;end;end;local Tf=({jf,{}});Ab[gb]=Tf;gb=gb+1;do if not(Mb)then else do BK[dK]=Tf;end;dK=dK+0X1;end;end;end;do mb=25;end;else Nb=j();do mb=4;end;end;else ab=j()-99784;mb=13;end;end;end;end;else if not(mb<=5)then if mb<=0X8 then if not(mb<=0x006)then if mb==0X7 then do(Db)[8]=N();end;mb=0X5;else do bb=Db[5];end;mb=0X006;end;else for kB=0X0,Gb-1 do(Ob)[kB]=CK();end;mb=0x3;end;else if mb<=10 then if mb~=9 then Ab={};do mb=16;end;else Db[18]=D();mb=20;end;else if mb==0Xb then Gb=j()-bK;mb=23;else Tb=j()-72148;do mb=0X015;end;end;end;end;else if not(mb<=2)then do if mb<=0x3 then Hb={};mb=12;else if mb==0X4 then for iu=1,Nb do local Yu,hu,Bu,gu=0X3,nil,nil,nil;do repeat do if not(Yu<=0X1)then if Yu~=0X002 then hu=j();do Yu=2;end;else Bu=j();Yu=1;end;else if Yu==0X0 then do for lW=hu,Bu do Db[0x07][lW]=gu;end;end;do Yu=4;end;else do gu=j();end;Yu=0;end;end;end;until Yu==0x0004;end;end;mb=0;else do return Db;end;end;end;end;else if not(mb<=0X000)then if mb==0x00001 then(Db)[0x9]=Hb;mb=2;else for fc=0X1,N()do do(Hb)[fc]={D(),N()};end;end;mb=0X7;end;else(Db)[0x0B]=D();mb=0x0001;end;end;end;end;end;end;end;LA=0X001;local eK=(nil);while LA~=0X003 do if not(LA<=0)then if LA~=0X1 then XK[0X00001]=BK;LA=0X000;else eK=CK();LA=2;end;else do BK=nil;end;do LA=0x3;end;end;end;do return SK(rK,eK,v)(...);end;end)(rawget,"\108sh\105\102\116",string,9,10,"\098\097\110\100",0X5,error,string.sub,table.unpack,rawset,string.rep,assert,0,0X3,20,nil,false,0XdE8F,8,next,ipairs,16,select,0X1000000,'\098xor',0x0006,setfenv,0X00e,getfenv,_ENV,bit32,"\114\115\104ift",string.match,'\098or',1,unpack,0X4,12,0X02,0X07,0X0000b,{32080,0X96aa8311,2613843587,0X0000fbfC602d,127439793,0x0E52572fa,1077103831,0XdF0C0f7C,0XA8C4cE3e},...);
